plugins {
    id 'java'
    id 'application' // necesario para definir un Main
    id 'com.github.johnrengelman.shadow' version '7.1.2' // para empaquetar todo en un fat jar
    id 'net.serenity-bdd.serenity-gradle-plugin' version '3.7.0'
}

version = '1.0-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

ext {
    serenityVersion = '3.7.0'
    cucumberVersion = '7.14.0'
}

dependencies {
    implementation "net.serenity-bdd:serenity-core:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-cucumber:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-screenplay-webdriver:${serenityVersion}"
    implementation "net.serenity-bdd:serenity-junit:${serenityVersion}"

    testImplementation "io.cucumber:cucumber-java:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-core:${cucumberVersion}"

    implementation "org.seleniumhq.selenium:selenium-java:4.8.3"
    implementation 'io.github.bonigarcia:webdrivermanager:5.8.0'
    testImplementation 'ch.qos.logback:logback-classic:1.2.11'
    testImplementation "junit:junit:4.13.2"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnit()

    // Borrar reportes antes de cada ejecuciÃ³n
    doFirst {
        delete fileTree("target/site/serenity")
    }
}

// ðŸ”¹ Incluir clases y recursos de `test` en el jar final
sourceSets {
    test {
        java { srcDirs = ['src/test/java'] }
        resources { srcDirs = ['src/test/resources'] }
    }
}

// ðŸ”¹ Clase principal para lanzar runners (Launcher.java)
application {
    mainClass = 'home.EjecutarRunnersUI'  // ajusta al paquete real
}

// ðŸ”¹ ConfiguraciÃ³n de shadowJar
shadowJar {
    archiveBaseName.set('automatizacion-serenity')
    archiveClassifier.set('all')
    archiveVersion.set(version)

    from sourceSets.test.output

    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': application.mainClass
    }

    zip64 = true
}

// Para que `gradlew build` genere tambiÃ©n el fat jar
tasks.build.dependsOn shadowJar
